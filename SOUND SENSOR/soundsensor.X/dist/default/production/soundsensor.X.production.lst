

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri May 27 23:57:47 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.40
    35                           ; Generated 17/11/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F877A Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0098                     	;# 
   178  0099                     	;# 
   179  009C                     	;# 
   180  009D                     	;# 
   181  009E                     	;# 
   182  009F                     	;# 
   183  010C                     	;# 
   184  010D                     	;# 
   185  010E                     	;# 
   186  010F                     	;# 
   187  018C                     	;# 
   188  018D                     	;# 
   189  0000                     	;# 
   190  0001                     	;# 
   191  0002                     	;# 
   192  0003                     	;# 
   193  0004                     	;# 
   194  0005                     	;# 
   195  0006                     	;# 
   196  0007                     	;# 
   197  0008                     	;# 
   198  0009                     	;# 
   199  000A                     	;# 
   200  000B                     	;# 
   201  000C                     	;# 
   202  000D                     	;# 
   203  000E                     	;# 
   204  000E                     	;# 
   205  000F                     	;# 
   206  0010                     	;# 
   207  0011                     	;# 
   208  0012                     	;# 
   209  0013                     	;# 
   210  0014                     	;# 
   211  0015                     	;# 
   212  0015                     	;# 
   213  0016                     	;# 
   214  0017                     	;# 
   215  0018                     	;# 
   216  0019                     	;# 
   217  001A                     	;# 
   218  001B                     	;# 
   219  001B                     	;# 
   220  001C                     	;# 
   221  001D                     	;# 
   222  001E                     	;# 
   223  001F                     	;# 
   224  0081                     	;# 
   225  0085                     	;# 
   226  0086                     	;# 
   227  0087                     	;# 
   228  0088                     	;# 
   229  0089                     	;# 
   230  008C                     	;# 
   231  008D                     	;# 
   232  008E                     	;# 
   233  0091                     	;# 
   234  0092                     	;# 
   235  0093                     	;# 
   236  0094                     	;# 
   237  0098                     	;# 
   238  0099                     	;# 
   239  009C                     	;# 
   240  009D                     	;# 
   241  009E                     	;# 
   242  009F                     	;# 
   243  010C                     	;# 
   244  010D                     	;# 
   245  010E                     	;# 
   246  010F                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249                           
   250                           	psect	idataBANK1
   251  05E3                     __pidataBANK1:
   252                           
   253                           ;initializer for _chu
   254  05E3  3420               	retlw	32
   255  05E4  3420               	retlw	32
   256  05E5  3420               	retlw	32
   257  05E6  3420               	retlw	32
   258  05E7  3420               	retlw	32
   259  05E8  3420               	retlw	32
   260  05E9  3420               	retlw	32
   261  05EA  3420               	retlw	32
   262  05EB  3420               	retlw	32
   263  05EC  3420               	retlw	32
   264  05ED  3420               	retlw	32
   265  05EE  3420               	retlw	32
   266  05EF  3420               	retlw	32
   267  05F0  3420               	retlw	32
   268  05F1  3420               	retlw	32
   269  05F2  3420               	retlw	32
   270  05F3  3457               	retlw	87
   271  05F4  3445               	retlw	69
   272  05F5  344C               	retlw	76
   273  05F6  3443               	retlw	67
   274  05F7  344F               	retlw	79
   275  05F8  344D               	retlw	77
   276  05F9  3445               	retlw	69
   277  05FA  3420               	retlw	32
   278  05FB  3454               	retlw	84
   279  05FC  344F               	retlw	79
   280  05FD  3420               	retlw	32
   281  05FE  3453               	retlw	83
   282  05FF  344D               	retlw	77
   283  0600  3441               	retlw	65
   284  0601  3452               	retlw	82
   285  0602  3454               	retlw	84
   286  0603  3420               	retlw	32
   287  0604  3448               	retlw	72
   288  0605  344F               	retlw	79
   289  0606  344D               	retlw	77
   290  0607  3445               	retlw	69
   291  0608  3420               	retlw	32
   292  0609  3442               	retlw	66
   293  060A  3459               	retlw	89
   294  060B  3420               	retlw	32
   295  060C  3439               	retlw	57
   296  060D  3434               	retlw	52
   297  060E  3420               	retlw	32
   298  060F  3420               	retlw	32
   299  0610  3420               	retlw	32
   300  0611  3420               	retlw	32
   301  0612  3420               	retlw	32
   302  0613  3420               	retlw	32
   303  0614  3420               	retlw	32
   304  0615  3420               	retlw	32
   305  0616  3420               	retlw	32
   306  0617  3420               	retlw	32
   307  0618  3420               	retlw	32
   308  0619  3420               	retlw	32
   309  061A  3420               	retlw	32
   310  061B  3420               	retlw	32
   311  061C  3420               	retlw	32
   312  061D  3420               	retlw	32
   313  061E  3400               	retlw	0
   314                           
   315                           	psect	idataBANK3
   316  05A7                     __pidataBANK3:
   317                           
   318                           ;initializer for _chu2
   319  05A7  3420               	retlw	32
   320  05A8  3420               	retlw	32
   321  05A9  3420               	retlw	32
   322  05AA  3420               	retlw	32
   323  05AB  3420               	retlw	32
   324  05AC  3420               	retlw	32
   325  05AD  3420               	retlw	32
   326  05AE  3420               	retlw	32
   327  05AF  3420               	retlw	32
   328  05B0  3420               	retlw	32
   329  05B1  3420               	retlw	32
   330  05B2  3420               	retlw	32
   331  05B3  3420               	retlw	32
   332  05B4  3420               	retlw	32
   333  05B5  3420               	retlw	32
   334  05B6  3420               	retlw	32
   335  05B7  3420               	retlw	32
   336  05B8  3420               	retlw	32
   337  05B9  3447               	retlw	71
   338  05BA  3456               	retlw	86
   339  05BB  3448               	retlw	72
   340  05BC  3444               	retlw	68
   341  05BD  343A               	retlw	58
   342  05BE  3454               	retlw	84
   343  05BF  3453               	retlw	83
   344  05C0  342E               	retlw	46
   345  05C1  3456               	retlw	86
   346  05C2  344F               	retlw	79
   347  05C3  3420               	retlw	32
   348  05C4  3458               	retlw	88
   349  05C5  3455               	retlw	85
   350  05C6  3441               	retlw	65
   351  05C7  344E               	retlw	78
   352  05C8  3420               	retlw	32
   353  05C9  3454               	retlw	84
   354  05CA  3449               	retlw	73
   355  05CB  3445               	retlw	69
   356  05CC  344E               	retlw	78
   357  05CD  3420               	retlw	32
   358  05CE  3420               	retlw	32
   359  05CF  3420               	retlw	32
   360  05D0  3420               	retlw	32
   361  05D1  3420               	retlw	32
   362  05D2  3420               	retlw	32
   363  05D3  3420               	retlw	32
   364  05D4  3420               	retlw	32
   365  05D5  3420               	retlw	32
   366  05D6  3420               	retlw	32
   367  05D7  3420               	retlw	32
   368  05D8  3420               	retlw	32
   369  05D9  3420               	retlw	32
   370  05DA  3420               	retlw	32
   371  05DB  3420               	retlw	32
   372  05DC  3420               	retlw	32
   373  05DD  3400               	retlw	0
   374  05DE  3400               	retlw	0
   375  05DF  3400               	retlw	0
   376  05E0  3400               	retlw	0
   377  05E1  3400               	retlw	0
   378  05E2  3400               	retlw	0
   379  0006                     _PORTBbits	set	6
   380  0006                     _PORTB	set	6
   381  0005                     _PORTA	set	5
   382  0008                     _PORTD	set	8
   383  003F                     _RC7	set	63
   384  003A                     _RC2	set	58
   385  0038                     _RC0	set	56
   386  0088                     _TRISD	set	136
   387  0086                     _TRISB	set	134
   388  0085                     _TRISA	set	133
   389  0087                     _TRISCbits	set	135
   390                           
   391                           	psect	strings
   392  0003                     __pstrings:
   393  0003                     stringtab:
   394  0003                     __stringtab:
   395  0003                     stringcode:	
   396                           ;	String table - string pointers are 1 byte each
   397                           
   398  0003                     stringdir:
   399  0003  3000               	movlw	high stringdir
   400  0004  008A               	movwf	10
   401  0005  0804               	movf	4,w
   402  0006  0A84               	incf	4,f
   403  0007  0782               	addwf	2,f
   404  0008                     __stringbase:
   405  0008  3400               	retlw	0
   406  0009                     __end_of__stringtab:
   407  0009                     STR_5:
   408  0009  344C               	retlw	76	;'L'
   409  000A  3431               	retlw	49	;'1'
   410  000B  343A               	retlw	58	;':'
   411  000C  344F               	retlw	79	;'O'
   412  000D  344E               	retlw	78	;'N'
   413  000E  3420               	retlw	32	;' '
   414  000F  3420               	retlw	32	;' '
   415  0010  344C               	retlw	76	;'L'
   416  0011  3432               	retlw	50	;'2'
   417  0012  343A               	retlw	58	;':'
   418  0013  344F               	retlw	79	;'O'
   419  0014  344E               	retlw	78	;'N'
   420  0015  3420               	retlw	32	;' '
   421  0016  3420               	retlw	32	;' '
   422  0017  3420               	retlw	32	;' '
   423  0018  3420               	retlw	32	;' '
   424  0019  3400               	retlw	0
   425  001A                     STR_7:
   426  001A  344C               	retlw	76	;'L'
   427  001B  3431               	retlw	49	;'1'
   428  001C  343A               	retlw	58	;':'
   429  001D  344F               	retlw	79	;'O'
   430  001E  344E               	retlw	78	;'N'
   431  001F  3420               	retlw	32	;' '
   432  0020  3420               	retlw	32	;' '
   433  0021  344C               	retlw	76	;'L'
   434  0022  3432               	retlw	50	;'2'
   435  0023  343A               	retlw	58	;':'
   436  0024  344F               	retlw	79	;'O'
   437  0025  3446               	retlw	70	;'F'
   438  0026  3446               	retlw	70	;'F'
   439  0027  3420               	retlw	32	;' '
   440  0028  3420               	retlw	32	;' '
   441  0029  3420               	retlw	32	;' '
   442  002A  3400               	retlw	0
   443  002B                     STR_3:
   444  002B  344C               	retlw	76	;'L'
   445  002C  3431               	retlw	49	;'1'
   446  002D  343A               	retlw	58	;':'
   447  002E  344F               	retlw	79	;'O'
   448  002F  3446               	retlw	70	;'F'
   449  0030  3446               	retlw	70	;'F'
   450  0031  3420               	retlw	32	;' '
   451  0032  344C               	retlw	76	;'L'
   452  0033  3432               	retlw	50	;'2'
   453  0034  343A               	retlw	58	;':'
   454  0035  344F               	retlw	79	;'O'
   455  0036  3446               	retlw	70	;'F'
   456  0037  3446               	retlw	70	;'F'
   457  0038  3420               	retlw	32	;' '
   458  0039  3420               	retlw	32	;' '
   459  003A  3420               	retlw	32	;' '
   460  003B  3400               	retlw	0
   461  003C                     STR_8:
   462  003C  344C               	retlw	76	;'L'
   463  003D  3433               	retlw	51	;'3'
   464  003E  343A               	retlw	58	;':'
   465  003F  344F               	retlw	79	;'O'
   466  0040  344E               	retlw	78	;'N'
   467  0041  3420               	retlw	32	;' '
   468  0042  3420               	retlw	32	;' '
   469  0043  3446               	retlw	70	;'F'
   470  0044  3441               	retlw	65	;'A'
   471  0045  344E               	retlw	78	;'N'
   472  0046  343A               	retlw	58	;':'
   473  0047  344F               	retlw	79	;'O'
   474  0048  344E               	retlw	78	;'N'
   475  0049  3420               	retlw	32	;' '
   476  004A  3420               	retlw	32	;' '
   477  004B  3420               	retlw	32	;' '
   478  004C  3400               	retlw	0
   479  004D                     STR_4:
   480  004D  344C               	retlw	76	;'L'
   481  004E  3433               	retlw	51	;'3'
   482  004F  343A               	retlw	58	;':'
   483  0050  344F               	retlw	79	;'O'
   484  0051  3446               	retlw	70	;'F'
   485  0052  3446               	retlw	70	;'F'
   486  0053  3420               	retlw	32	;' '
   487  0054  3446               	retlw	70	;'F'
   488  0055  3441               	retlw	65	;'A'
   489  0056  344E               	retlw	78	;'N'
   490  0057  343A               	retlw	58	;':'
   491  0058  344F               	retlw	79	;'O'
   492  0059  3446               	retlw	70	;'F'
   493  005A  3446               	retlw	70	;'F'
   494  005B  3420               	retlw	32	;' '
   495  005C  3420               	retlw	32	;' '
   496  005D  3400               	retlw	0
   497  005E                     STR_1:
   498  005E  3453               	retlw	83	;'S'
   499  005F  344D               	retlw	77	;'M'
   500  0060  3441               	retlw	65	;'A'
   501  0061  3452               	retlw	82	;'R'
   502  0062  3454               	retlw	84	;'T'
   503  0063  3420               	retlw	32	;' '
   504  0064  3448               	retlw	72	;'H'
   505  0065  344F               	retlw	79	;'O'
   506  0066  344D               	retlw	77	;'M'
   507  0067  3445               	retlw	69	;'E'
   508  0068  3420               	retlw	32	;' '
   509  0069  3442               	retlw	66	;'B'
   510  006A  3459               	retlw	89	;'Y'
   511  006B  3420               	retlw	32	;' '
   512  006C  3439               	retlw	57	;'9'
   513  006D  3434               	retlw	52	;'4'
   514  006E  3400               	retlw	0
   515  006F                     STR_2:
   516  006F  3447               	retlw	71	;'G'
   517  0070  3456               	retlw	86	;'V'
   518  0071  343A               	retlw	58	;':'
   519  0072  3456               	retlw	86	;'V'
   520  0073  344F               	retlw	79	;'O'
   521  0074  3420               	retlw	32	;' '
   522  0075  3458               	retlw	88	;'X'
   523  0076  3455               	retlw	85	;'U'
   524  0077  3441               	retlw	65	;'A'
   525  0078  344E               	retlw	78	;'N'
   526  0079  3420               	retlw	32	;' '
   527  007A  3454               	retlw	84	;'T'
   528  007B  3449               	retlw	73	;'I'
   529  007C  3445               	retlw	69	;'E'
   530  007D  344E               	retlw	78	;'N'
   531  007E  3400               	retlw	0
   532  0009                     
   533                           	psect	cinit
   534  07D7                     start_initialization:	
   535                           ; #config settings
   536                           
   537  07D7                     __initialization:
   538                           
   539                           ; Initialize objects allocated to BANK3
   540  07D7  1783               	bsf	3,7	;select IRP bank2
   541  07D8  30CC               	movlw	low (__pdataBANK3+60)
   542  07D9  00FD               	movwf	btemp+-1
   543  07DA  3005               	movlw	high __pidataBANK3
   544  07DB  00FE               	movwf	btemp
   545  07DC  30A7               	movlw	low __pidataBANK3
   546  07DD  00FF               	movwf	btemp+1
   547  07DE  3090               	movlw	low __pdataBANK3
   548  07DF  0084               	movwf	4
   549  07E0  120A  118A  244D  120A  118A  	fcall	init_ram0
   550                           
   551                           ; Initialize objects allocated to BANK1
   552  07E5  1383               	bcf	3,7	;select IRP bank0
   553  07E6  30DC               	movlw	low (__pdataBANK1+60)
   554  07E7  00FD               	movwf	btemp+-1
   555  07E8  3005               	movlw	high __pidataBANK1
   556  07E9  00FE               	movwf	btemp
   557  07EA  30E3               	movlw	low __pidataBANK1
   558  07EB  00FF               	movwf	btemp+1
   559  07EC  30A0               	movlw	low __pdataBANK1
   560  07ED  0084               	movwf	4
   561  07EE  120A  118A  244D  120A  118A  	fcall	init_ram0
   562                           
   563                           ; Clear objects allocated to BANK0
   564  07F3  3020               	movlw	low __pbssBANK0
   565  07F4  0084               	movwf	4
   566  07F5  3037               	movlw	low (__pbssBANK0+23)
   567  07F6  120A  118A  2441  120A  118A  	fcall	clear_ram0
   568                           
   569                           ; Clear objects allocated to COMMON
   570  07FB  01FD               	clrf	__pbssCOMMON& (0+127)
   571  07FC                     end_of_initialization:	
   572                           ;End of C runtime variable initialization code
   573                           
   574  07FC                     __end_of__initialization:
   575  07FC  0183               	clrf	3
   576  07FD  120A  118A  2E1F   	ljmp	_main	;jump to C main() function
   577                           
   578                           	psect	bssCOMMON
   579  007D                     __pbssCOMMON:
   580  007D                     _i:
   581  007D                     	ds	1
   582                           
   583                           	psect	bssBANK0
   584  0020                     __pbssBANK0:
   585  0020                     _buffer:
   586  0020                     	ds	20
   587  0034                     _j:
   588  0034                     	ds	2
   589  0036                     _flag:
   590  0036                     	ds	1
   591                           
   592                           	psect	dataBANK1
   593  00A0                     __pdataBANK1:
   594  00A0                     _chu:
   595  00A0                     	ds	60
   596                           
   597                           	psect	dataBANK3
   598  0190                     __pdataBANK3:
   599  0190                     _chu2:
   600  0190                     	ds	60
   601                           
   602                           	psect	inittext
   603  0449                     init_fetch0:	
   604                           ;	Called with low address in FSR and high address in W
   605                           
   606  0449  087E               	movf	btemp,w
   607  044A  008A               	movwf	10
   608  044B  087F               	movf	btemp+1,w
   609  044C  0082               	movwf	2
   610  044D                     init_ram0:	
   611                           ;Called with:
   612                           ;	high address of idata address in btemp 
   613                           ;	low address of idata address in btemp+1 
   614                           ;	low address of data in FSR
   615                           ;	high address + 1 of data in btemp-1
   616                           
   617  044D  120A  118A  2449  120A  118A  	fcall	init_fetch0
   618  0452  0080               	movwf	0
   619  0453  0A84               	incf	4,f
   620  0454  0804               	movf	4,w
   621  0455  067D               	xorwf	btemp+-1,w
   622  0456  1903               	btfsc	3,2
   623  0457  3400               	retlw	0
   624  0458  0AFF               	incf	btemp+1,f
   625  0459  1903               	btfsc	3,2
   626  045A  0AFE               	incf	btemp,f
   627  045B  2C4D               	goto	init_ram0
   628                           
   629                           	psect	clrtext
   630  0441                     clear_ram0:	
   631                           ;	Called with FSR containing the base address, and
   632                           ;	W with the last address+1
   633                           
   634  0441  0064               	clrwdt	;clear the watchdog before getting into this loop
   635  0442                     clrloop0:
   636  0442  0180               	clrf	0	;clear RAM location pointed to by FSR
   637  0443  0A84               	incf	4,f	;increment pointer
   638  0444  0604               	xorwf	4,w	;XOR with final address
   639  0445  1903               	btfsc	3,2	;have we reached the end yet?
   640  0446  3400               	retlw	0	;all done for this memory range, return
   641  0447  0604               	xorwf	4,w	;XOR again to restore value
   642  0448  2C42               	goto	clrloop0	;do the next byte
   643                           
   644                           	psect	cstackCOMMON
   645  0070                     __pcstackCOMMON:
   646  0070                     ?_LCD_Initialize:
   647  0070                     ?_LCDPutStr:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_LCDPutCmd:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_clap1:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ??_clap1:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_clap2:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ??_clap2:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_clap3:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ??_clap3:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_clap4:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ??_clap4:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_ngoaiduong1:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ??_ngoaiduong1:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_ngoaiduong2:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ??_ngoaiduong2:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_buzzer:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ??_buzzer:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_main:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_LCDWriteNibble:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_LCDPutChar:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     LCDWriteNibble@rs:	
   705                           ; 1 bytes @ 0x0
   706                           
   707                           
   708                           ; 1 bytes @ 0x0
   709  0070                     	ds	1
   710  0071                     ??_LCDWriteNibble:
   711  0071                     buzzer@time:	
   712                           ; 1 bytes @ 0x1
   713                           
   714                           
   715                           ; 1 bytes @ 0x1
   716  0071                     	ds	2
   717  0073                     LCDWriteNibble@ch:
   718                           
   719                           ; 1 bytes @ 0x3
   720  0073                     	ds	1
   721  0074                     ??_LCDPutCmd:
   722  0074                     ??_LCDPutChar:	
   723                           ; 1 bytes @ 0x4
   724                           
   725                           
   726                           ; 1 bytes @ 0x4
   727  0074                     	ds	2
   728  0076                     LCDPutChar@ch:
   729  0076                     LCDPutCmd@ch:	
   730                           ; 1 bytes @ 0x6
   731                           
   732                           
   733                           ; 1 bytes @ 0x6
   734  0076                     	ds	1
   735  0077                     ??_LCD_Initialize:
   736  0077                     ?_LCDGoto:	
   737                           ; 1 bytes @ 0x7
   738                           
   739  0077                     ??_LCDPutStr:	
   740                           ; 1 bytes @ 0x7
   741                           
   742  0077                     LCDGoto@ln:	
   743                           ; 1 bytes @ 0x7
   744                           
   745                           
   746                           ; 1 bytes @ 0x7
   747  0077                     	ds	1
   748  0078                     ??_LCDGoto:
   749  0078                     LCDPutStr@i:	
   750                           ; 1 bytes @ 0x8
   751                           
   752                           
   753                           ; 1 bytes @ 0x8
   754  0078                     	ds	1
   755  0079                     LCDPutStr@str:
   756                           
   757                           ; 1 bytes @ 0x9
   758  0079                     	ds	1
   759  007A                     _LCDGoto$172:
   760                           
   761                           ; 2 bytes @ 0xA
   762  007A                     	ds	2
   763  007C                     LCDGoto@pos:
   764                           
   765                           ; 1 bytes @ 0xC
   766  007C                     	ds	1
   767                           
   768                           	psect	cstackBANK0
   769  0037                     __pcstackBANK0:
   770  0037                     ??_main:
   771                           
   772                           ; 1 bytes @ 0x0
   773  0037                     	ds	2
   774                           
   775                           	psect	maintext
   776  061F                     __pmaintext:	
   777 ;;
   778 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   779 ;;
   780 ;; *************** function _main *****************
   781 ;; Defined at:
   782 ;;		line 537 in file "newmain.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;		None
   785 ;; Auto vars:     Size  Location     Type
   786 ;;		None
   787 ;; Return value:  Size  Location     Type
   788 ;;                  1    wreg      void 
   789 ;; Registers used:
   790 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   791 ;; Tracked objects:
   792 ;;		On entry : B00/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   796 ;;      Params:         0       0       0       0       0
   797 ;;      Locals:         0       0       0       0       0
   798 ;;      Temps:          0       2       0       0       0
   799 ;;      Totals:         0       2       0       0       0
   800 ;;Total ram usage:        2 bytes
   801 ;; Hardware stack levels required when called: 3
   802 ;; This function calls:
   803 ;;		_LCDGoto
   804 ;;		_LCDPutStr
   805 ;;		_LCD_Initialize
   806 ;;		_buzzer
   807 ;;		_clap1
   808 ;;		_clap2
   809 ;;		_clap3
   810 ;;		_clap4
   811 ;;		_ngoaiduong1
   812 ;;		_ngoaiduong2
   813 ;; This function is called by:
   814 ;;		Startup code after reset
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818  061F                     _main:	
   819                           ;psect for function _main
   820                           
   821  061F                     l1143:	
   822                           ;incstack = 0
   823                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   824                           
   825                           
   826                           ;newmain.c: 538:     TRISCbits.TRISC0 = 1;
   827  061F  1683               	bsf	3,5	;RP0=1, select bank1
   828  0620  1303               	bcf	3,6	;RP1=0, select bank1
   829  0621  1407               	bsf	7,0	;volatile
   830                           
   831                           ;newmain.c: 539:     TRISCbits.TRISC2 = 0;
   832  0622  1107               	bcf	7,2	;volatile
   833                           
   834                           ;newmain.c: 540:     TRISCbits.TRISC7 = 0;
   835  0623  1387               	bcf	7,7	;volatile
   836                           
   837                           ;newmain.c: 541:     RC2 = 0;
   838  0624  1283               	bcf	3,5	;RP0=0, select bank0
   839  0625  1303               	bcf	3,6	;RP1=0, select bank0
   840  0626  1107               	bcf	7,2	;volatile
   841                           
   842                           ;newmain.c: 542:     RC7 = 0;
   843  0627  1387               	bcf	7,7	;volatile
   844  0628                     l1145:
   845                           
   846                           ;newmain.c: 543:     TRISA = 0;
   847  0628  1683               	bsf	3,5	;RP0=1, select bank1
   848  0629  1303               	bcf	3,6	;RP1=0, select bank1
   849  062A  0185               	clrf	5	;volatile
   850                           
   851                           ;newmain.c: 544:     PORTA = 0;
   852  062B  1283               	bcf	3,5	;RP0=0, select bank0
   853  062C  1303               	bcf	3,6	;RP1=0, select bank0
   854  062D  0185               	clrf	5	;volatile
   855                           
   856                           ;newmain.c: 545:     TRISB = 0;
   857  062E  1683               	bsf	3,5	;RP0=1, select bank1
   858  062F  1303               	bcf	3,6	;RP1=0, select bank1
   859  0630  0186               	clrf	6	;volatile
   860                           
   861                           ;newmain.c: 547:     TRISD = 0;
   862  0631  0188               	clrf	8	;volatile
   863                           
   864                           ;newmain.c: 548:     PORTD = 0;
   865  0632  1283               	bcf	3,5	;RP0=0, select bank0
   866  0633  1303               	bcf	3,6	;RP1=0, select bank0
   867  0634  0188               	clrf	8	;volatile
   868  0635                     l1147:
   869                           
   870                           ;newmain.c: 549:     LCD_Initialize();
   871  0635  120A  118A  253C  120A  118A  	fcall	_LCD_Initialize
   872  063A                     l1149:
   873                           
   874                           ;newmain.c: 550:     LCDGoto(0, 0);
   875  063A  01F7               	clrf	LCDGoto@ln
   876  063B  3000               	movlw	0
   877  063C  120A  118A  250F  120A  118A  	fcall	_LCDGoto
   878  0641                     l1151:
   879                           
   880                           ;newmain.c: 551:     LCDPutStr("SMART HOME BY 94");
   881  0641  3056               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   882  0642  120A  118A  2477  120A  118A  	fcall	_LCDPutStr
   883  0647                     l1153:
   884                           
   885                           ;newmain.c: 552:     LCDGoto(0, 1);
   886  0647  01F7               	clrf	LCDGoto@ln
   887  0648  0AF7               	incf	LCDGoto@ln,f
   888  0649  3000               	movlw	0
   889  064A  120A  118A  250F  120A  118A  	fcall	_LCDGoto
   890  064F                     l1155:
   891                           
   892                           ;newmain.c: 553:     LCDPutStr("GV:VO XUAN TIEN");
   893  064F  3067               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   894  0650  120A  118A  2477  120A  118A  	fcall	_LCDPutStr
   895  0655                     l1157:
   896                           
   897                           ;newmain.c: 555:     {;newmain.c: 556:         if(RC0 == 1)
   898  0655  1283               	bcf	3,5	;RP0=0, select bank0
   899  0656  1303               	bcf	3,6	;RP1=0, select bank0
   900  0657  1C07               	btfss	7,0	;volatile
   901  0658  2E5A               	goto	u471
   902  0659  2E5B               	goto	u470
   903  065A                     u471:
   904  065A  2E55               	goto	l1157
   905  065B                     u470:
   906  065B                     l1159:
   907                           
   908                           ;newmain.c: 557:         {;newmain.c: 558:             _delay((unsigned long)((100)*(400
      +                          0000/4000.0)));
   909  065B  3082               	movlw	130
   910  065C  1283               	bcf	3,5	;RP0=0, select bank0
   911  065D  1303               	bcf	3,6	;RP1=0, select bank0
   912  065E  00B8               	movwf	??_main+1
   913  065F  30DD               	movlw	221
   914  0660  00B7               	movwf	??_main
   915  0661                     u697:
   916  0661  0BB7               	decfsz	??_main,f
   917  0662  2E61               	goto	u697
   918  0663  0BB8               	decfsz	??_main+1,f
   919  0664  2E61               	goto	u697
   920  0665                     l1161:
   921                           
   922                           ;newmain.c: 559:             for(j = 0; j < 400; j++)
   923  0665  1283               	bcf	3,5	;RP0=0, select bank0
   924  0666  1303               	bcf	3,6	;RP1=0, select bank0
   925  0667  01B4               	clrf	_j
   926  0668  01B5               	clrf	_j+1
   927  0669                     l1167:
   928                           
   929                           ;newmain.c: 560:             {;newmain.c: 561:                 _delay((unsigned long)((1
      +                          )*(4000000/4000.0)));
   930  0669  30C7               	movlw	199
   931  066A  1283               	bcf	3,5	;RP0=0, select bank0
   932  066B  1303               	bcf	3,6	;RP1=0, select bank0
   933  066C  00B7               	movwf	??_main
   934  066D                     u707:
   935  066D  2E6E               	nop2
   936  066E  0BB7               	decfsz	??_main,f
   937  066F  2E6D               	goto	u707
   938  0670  2E71               	nop2
   939  0671                     l1169:
   940                           
   941                           ;newmain.c: 562:                 if(RC0 == 1) goto THANG;
   942  0671  1283               	bcf	3,5	;RP0=0, select bank0
   943  0672  1303               	bcf	3,6	;RP1=0, select bank0
   944  0673  1C07               	btfss	7,0	;volatile
   945  0674  2E76               	goto	u481
   946  0675  2E77               	goto	u480
   947  0676                     u481:
   948  0676  2E78               	goto	l1173
   949  0677                     u480:
   950  0677  2E8B               	goto	l1175
   951  0678                     l1173:
   952                           
   953                           ;newmain.c: 563:             }
   954  0678  3001               	movlw	1
   955  0679  07B4               	addwf	_j,f
   956  067A  1803               	skipnc
   957  067B  0AB5               	incf	_j+1,f
   958  067C  3000               	movlw	0
   959  067D  07B5               	addwf	_j+1,f
   960  067E  3001               	movlw	1
   961  067F  0235               	subwf	_j+1,w
   962  0680  3090               	movlw	144
   963  0681  1903               	skipnz
   964  0682  0234               	subwf	_j,w
   965  0683  1C03               	skipc
   966  0684  2E86               	goto	u491
   967  0685  2E87               	goto	u490
   968  0686                     u491:
   969  0686  2E69               	goto	l1167
   970  0687                     u490:
   971  0687                     l76:
   972                           
   973                           ;newmain.c: 564:             if(RC0 == 1)
   974  0687  1C07               	btfss	7,0	;volatile
   975  0688  2E8A               	goto	u501
   976  0689  2E8B               	goto	u500
   977  068A                     u501:
   978  068A  2EC2               	goto	l84
   979  068B                     u500:
   980  068B                     l1175:
   981                           
   982                           ;newmain.c: 567:                 PORTD = 0; PORTA = 0; RC7 = 0; flag = 1;
   983  068B  0188               	clrf	8	;volatile
   984  068C  0185               	clrf	5	;volatile
   985  068D                     l1177:
   986  068D  1387               	bcf	7,7	;volatile
   987  068E                     l1179:
   988  068E  01B6               	clrf	_flag
   989  068F  0AB6               	incf	_flag,f
   990  0690                     l1181:
   991                           
   992                           ;newmain.c: 568:                 buzzer(100);
   993  0690  3064               	movlw	100
   994  0691  120A  118A  245C  120A  118A  	fcall	_buzzer
   995  0696                     l1183:
   996                           
   997                           ;newmain.c: 569:                 LCDGoto(0, 0);
   998  0696  01F7               	clrf	LCDGoto@ln
   999  0697  3000               	movlw	0
  1000  0698  120A  118A  250F  120A  118A  	fcall	_LCDGoto
  1001  069D                     l1185:
  1002                           
  1003                           ;newmain.c: 570:                 LCDPutStr("L1:OFF L2:OFF   ");
  1004  069D  3023               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1005  069E  120A  118A  2477  120A  118A  	fcall	_LCDPutStr
  1006  06A3                     l1187:
  1007                           
  1008                           ;newmain.c: 571:                 LCDGoto(0, 1);
  1009  06A3  01F7               	clrf	LCDGoto@ln
  1010  06A4  0AF7               	incf	LCDGoto@ln,f
  1011  06A5  3000               	movlw	0
  1012  06A6  120A  118A  250F  120A  118A  	fcall	_LCDGoto
  1013  06AB                     l1189:
  1014                           
  1015                           ;newmain.c: 572:                 LCDPutStr("L3:OFF FAN:OFF  ");
  1016  06AB  3045               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1017  06AC  120A  118A  2477  120A  118A  	fcall	_LCDPutStr
  1018  06B1                     l1191:
  1019                           
  1020                           ;newmain.c: 573:                 _delay((unsigned long)((100)*(4000000/4000.0)));
  1021  06B1  3082               	movlw	130
  1022  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  1023  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  1024  06B4  00B8               	movwf	??_main+1
  1025  06B5  30DD               	movlw	221
  1026  06B6  00B7               	movwf	??_main
  1027  06B7                     u717:
  1028  06B7  0BB7               	decfsz	??_main,f
  1029  06B8  2EB7               	goto	u717
  1030  06B9  0BB8               	decfsz	??_main+1,f
  1031  06BA  2EB7               	goto	u717
  1032  06BB                     l80:	
  1033                           ;newmain.c: 574:                 while(RC0 == 0);
  1034                           
  1035  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  1036  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  1037  06BD  1C07               	btfss	7,0	;volatile
  1038  06BE  2EC0               	goto	u511
  1039  06BF  2EC1               	goto	u510
  1040  06C0                     u511:
  1041  06C0  2EBB               	goto	l80
  1042  06C1                     u510:
  1043  06C1  2E55               	goto	l1157
  1044  06C2                     l84:
  1045  06C2  1807               	btfsc	7,0	;volatile
  1046  06C3  2EC5               	goto	u521
  1047  06C4  2EC6               	goto	u520
  1048  06C5                     u521:
  1049  06C5  2EC2               	goto	l84
  1050  06C6                     u520:
  1051  06C6                     l1193:
  1052                           
  1053                           ;newmain.c: 579:                 if((flag == 1) && (RC0 == 0))
  1054  06C6  0336               	decf	_flag,w
  1055  06C7  1D03               	btfss	3,2
  1056  06C8  2ECA               	goto	u531
  1057  06C9  2ECB               	goto	u530
  1058  06CA                     u531:
  1059  06CA  2F09               	goto	l1215
  1060  06CB                     u530:
  1061  06CB                     l1195:
  1062  06CB  1807               	btfsc	7,0	;volatile
  1063  06CC  2ECE               	goto	u541
  1064  06CD  2ECF               	goto	u540
  1065  06CE                     u541:
  1066  06CE  2F09               	goto	l1215
  1067  06CF                     u540:
  1068  06CF                     l1197:
  1069                           
  1070                           ;newmain.c: 580:                 {;newmain.c: 581:                     buzzer(100);
  1071  06CF  3064               	movlw	100
  1072  06D0  120A  118A  245C  120A  118A  	fcall	_buzzer
  1073  06D5                     l1199:
  1074                           
  1075                           ;newmain.c: 582:                     flag = 2; RC7 = 0;
  1076  06D5  3002               	movlw	2
  1077  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  1078  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  1079  06D8  00B7               	movwf	??_main
  1080  06D9  0837               	movf	??_main,w
  1081  06DA  00B6               	movwf	_flag
  1082  06DB                     l1201:
  1083  06DB  1387               	bcf	7,7	;volatile
  1084  06DC                     l1203:
  1085                           
  1086                           ;newmain.c: 583:                     LCDGoto(0, 0);
  1087  06DC  01F7               	clrf	LCDGoto@ln
  1088  06DD  3000               	movlw	0
  1089  06DE  120A  118A  250F  120A  118A  	fcall	_LCDGoto
  1090  06E3                     l1205:
  1091                           
  1092                           ;newmain.c: 584:                     LCDPutStr("L1:ON  L2:ON    ");
  1093  06E3  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1094  06E4  120A  118A  2477  120A  118A  	fcall	_LCDPutStr
  1095  06E9                     l1207:
  1096                           
  1097                           ;newmain.c: 585:                     LCDGoto(0, 1);
  1098  06E9  01F7               	clrf	LCDGoto@ln
  1099  06EA  0AF7               	incf	LCDGoto@ln,f
  1100  06EB  3000               	movlw	0
  1101  06EC  120A  118A  250F  120A  118A  	fcall	_LCDGoto
  1102  06F1                     l1209:
  1103                           
  1104                           ;newmain.c: 586:                     LCDPutStr("L3:OFF FAN:OFF  ");
  1105  06F1  3045               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1106  06F2  120A  118A  2477  120A  118A  	fcall	_LCDPutStr
  1107                           
  1108                           ;newmain.c: 587:                     while(RC0 == 0)
  1109  06F7  2F02               	goto	l1213
  1110  06F8                     l1211:
  1111                           
  1112                           ;newmain.c: 588:                     {;newmain.c: 589:                         clap1();
  1113  06F8  120A  118A  2428  120A  118A  	fcall	_clap1
  1114                           
  1115                           ;newmain.c: 590:                         ngoaiduong1();
  1116  06FD  120A  118A  243C  120A  118A  	fcall	_ngoaiduong1
  1117  0702                     l1213:
  1118                           
  1119                           ;newmain.c: 587:                     while(RC0 == 0)
  1120  0702  1283               	bcf	3,5	;RP0=0, select bank0
  1121  0703  1303               	bcf	3,6	;RP1=0, select bank0
  1122  0704  1C07               	btfss	7,0	;volatile
  1123  0705  2F07               	goto	u551
  1124  0706  2F08               	goto	u550
  1125  0707                     u551:
  1126  0707  2EF8               	goto	l1211
  1127  0708                     u550:
  1128  0708  2E55               	goto	l1157
  1129  0709                     l1215:
  1130  0709  3002               	movlw	2
  1131  070A  0636               	xorwf	_flag,w
  1132  070B  1D03               	btfss	3,2
  1133  070C  2F0E               	goto	u561
  1134  070D  2F0F               	goto	u560
  1135  070E                     u561:
  1136  070E  2F4D               	goto	l1237
  1137  070F                     u560:
  1138  070F                     l1217:
  1139  070F  1807               	btfsc	7,0	;volatile
  1140  0710  2F12               	goto	u571
  1141  0711  2F13               	goto	u570
  1142  0712                     u571:
  1143  0712  2F4D               	goto	l1237
  1144  0713                     u570:
  1145  0713                     l1219:
  1146                           
  1147                           ;newmain.c: 595:                 {;newmain.c: 596:                     buzzer(100);
  1148  0713  3064               	movlw	100
  1149  0714  120A  118A  245C  120A  118A  	fcall	_buzzer
  1150  0719                     l1221:
  1151                           
  1152                           ;newmain.c: 597:                     flag = 3; RC7 = 1;
  1153  0719  3003               	movlw	3
  1154  071A  1283               	bcf	3,5	;RP0=0, select bank0
  1155  071B  1303               	bcf	3,6	;RP1=0, select bank0
  1156  071C  00B7               	movwf	??_main
  1157  071D  0837               	movf	??_main,w
  1158  071E  00B6               	movwf	_flag
  1159  071F                     l1223:
  1160  071F  1787               	bsf	7,7	;volatile
  1161  0720                     l1225:
  1162                           
  1163                           ;newmain.c: 598:                     LCDGoto(0, 0);
  1164  0720  01F7               	clrf	LCDGoto@ln
  1165  0721  3000               	movlw	0
  1166  0722  120A  118A  250F  120A  118A  	fcall	_LCDGoto
  1167  0727                     l1227:
  1168                           
  1169                           ;newmain.c: 599:                     LCDPutStr("L1:ON  L2:OFF   ");
  1170  0727  3012               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1171  0728  120A  118A  2477  120A  118A  	fcall	_LCDPutStr
  1172  072D                     l1229:
  1173                           
  1174                           ;newmain.c: 600:                     LCDGoto(0, 1);
  1175  072D  01F7               	clrf	LCDGoto@ln
  1176  072E  0AF7               	incf	LCDGoto@ln,f
  1177  072F  3000               	movlw	0
  1178  0730  120A  118A  250F  120A  118A  	fcall	_LCDGoto
  1179  0735                     l1231:
  1180                           
  1181                           ;newmain.c: 601:                     LCDPutStr("L3:ON  FAN:ON   ");
  1182  0735  3034               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1183  0736  120A  118A  2477  120A  118A  	fcall	_LCDPutStr
  1184                           
  1185                           ;newmain.c: 602:                     while(RC0 == 0)
  1186  073B  2F46               	goto	l1235
  1187  073C                     l1233:
  1188                           
  1189                           ;newmain.c: 603:                     {;newmain.c: 604:                         clap2();
  1190  073C  120A  118A  242D  120A  118A  	fcall	_clap2
  1191                           
  1192                           ;newmain.c: 605:                         ngoaiduong2();
  1193  0741  120A  118A  256D  120A  118A  	fcall	_ngoaiduong2
  1194  0746                     l1235:
  1195                           
  1196                           ;newmain.c: 602:                     while(RC0 == 0)
  1197  0746  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0747  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0748  1C07               	btfss	7,0	;volatile
  1200  0749  2F4B               	goto	u581
  1201  074A  2F4C               	goto	u580
  1202  074B                     u581:
  1203  074B  2F3C               	goto	l1233
  1204  074C                     u580:
  1205  074C  2E55               	goto	l1157
  1206  074D                     l1237:
  1207  074D  3003               	movlw	3
  1208  074E  0636               	xorwf	_flag,w
  1209  074F  1D03               	btfss	3,2
  1210  0750  2F52               	goto	u591
  1211  0751  2F53               	goto	u590
  1212  0752                     u591:
  1213  0752  2F91               	goto	l1259
  1214  0753                     u590:
  1215  0753                     l1239:
  1216  0753  1807               	btfsc	7,0	;volatile
  1217  0754  2F56               	goto	u601
  1218  0755  2F57               	goto	u600
  1219  0756                     u601:
  1220  0756  2F91               	goto	l1259
  1221  0757                     u600:
  1222  0757                     l1241:
  1223                           
  1224                           ;newmain.c: 610:                 {;newmain.c: 611:                     buzzer(100);
  1225  0757  3064               	movlw	100
  1226  0758  120A  118A  245C  120A  118A  	fcall	_buzzer
  1227  075D                     l1243:
  1228                           
  1229                           ;newmain.c: 612:                     flag = 4; RC7 = 1;
  1230  075D  3004               	movlw	4
  1231  075E  1283               	bcf	3,5	;RP0=0, select bank0
  1232  075F  1303               	bcf	3,6	;RP1=0, select bank0
  1233  0760  00B7               	movwf	??_main
  1234  0761  0837               	movf	??_main,w
  1235  0762  00B6               	movwf	_flag
  1236  0763                     l1245:
  1237  0763  1787               	bsf	7,7	;volatile
  1238  0764                     l1247:
  1239                           
  1240                           ;newmain.c: 613:                     LCDGoto(0, 0);
  1241  0764  01F7               	clrf	LCDGoto@ln
  1242  0765  3000               	movlw	0
  1243  0766  120A  118A  250F  120A  118A  	fcall	_LCDGoto
  1244  076B                     l1249:
  1245                           
  1246                           ;newmain.c: 614:                     LCDPutStr("L1:OFF L2:OFF   ");
  1247  076B  3023               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1248  076C  120A  118A  2477  120A  118A  	fcall	_LCDPutStr
  1249  0771                     l1251:
  1250                           
  1251                           ;newmain.c: 615:                     LCDGoto(0, 1);
  1252  0771  01F7               	clrf	LCDGoto@ln
  1253  0772  0AF7               	incf	LCDGoto@ln,f
  1254  0773  3000               	movlw	0
  1255  0774  120A  118A  250F  120A  118A  	fcall	_LCDGoto
  1256  0779                     l1253:
  1257                           
  1258                           ;newmain.c: 616:                     LCDPutStr("L3:ON  FAN:ON   ");
  1259  0779  3034               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1260  077A  120A  118A  2477  120A  118A  	fcall	_LCDPutStr
  1261                           
  1262                           ;newmain.c: 617:                     while(RC0 == 0)
  1263  077F  2F8A               	goto	l1257
  1264  0780                     l1255:
  1265                           
  1266                           ;newmain.c: 618:                     {;newmain.c: 619:                         clap3();
  1267  0780  120A  118A  2432  120A  118A  	fcall	_clap3
  1268                           
  1269                           ;newmain.c: 620:                         ngoaiduong1();
  1270  0785  120A  118A  243C  120A  118A  	fcall	_ngoaiduong1
  1271  078A                     l1257:
  1272                           
  1273                           ;newmain.c: 617:                     while(RC0 == 0)
  1274  078A  1283               	bcf	3,5	;RP0=0, select bank0
  1275  078B  1303               	bcf	3,6	;RP1=0, select bank0
  1276  078C  1C07               	btfss	7,0	;volatile
  1277  078D  2F8F               	goto	u611
  1278  078E  2F90               	goto	u610
  1279  078F                     u611:
  1280  078F  2F80               	goto	l1255
  1281  0790                     u610:
  1282  0790  2E55               	goto	l1157
  1283  0791                     l1259:
  1284  0791  3004               	movlw	4
  1285  0792  0636               	xorwf	_flag,w
  1286  0793  1D03               	btfss	3,2
  1287  0794  2F96               	goto	u621
  1288  0795  2F97               	goto	u620
  1289  0796                     u621:
  1290  0796  2FD3               	goto	l74
  1291  0797                     u620:
  1292  0797                     l1261:
  1293  0797  1807               	btfsc	7,0	;volatile
  1294  0798  2F9A               	goto	u631
  1295  0799  2F9B               	goto	u630
  1296  079A                     u631:
  1297  079A  2FD3               	goto	l74
  1298  079B                     u630:
  1299  079B                     l1263:
  1300                           
  1301                           ;newmain.c: 625:                 {;newmain.c: 626:                     buzzer(100);
  1302  079B  3064               	movlw	100
  1303  079C  120A  118A  245C  120A  118A  	fcall	_buzzer
  1304  07A1                     l1265:
  1305                           
  1306                           ;newmain.c: 627:                     flag = 1; RC7 = 1;
  1307  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  1308  07A2  1303               	bcf	3,6	;RP1=0, select bank0
  1309  07A3  01B6               	clrf	_flag
  1310  07A4  0AB6               	incf	_flag,f
  1311  07A5                     l1267:
  1312  07A5  1787               	bsf	7,7	;volatile
  1313                           
  1314                           ;newmain.c: 628:                     LCDGoto(0, 0);
  1315  07A6  01F7               	clrf	LCDGoto@ln
  1316  07A7  3000               	movlw	0
  1317  07A8  120A  118A  250F  120A  118A  	fcall	_LCDGoto
  1318  07AD                     l1269:
  1319                           
  1320                           ;newmain.c: 629:                     LCDPutStr("L1:ON  L2:ON    ");
  1321  07AD  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1322  07AE  120A  118A  2477  120A  118A  	fcall	_LCDPutStr
  1323  07B3                     l1271:
  1324                           
  1325                           ;newmain.c: 630:                     LCDGoto(0, 1);
  1326  07B3  01F7               	clrf	LCDGoto@ln
  1327  07B4  0AF7               	incf	LCDGoto@ln,f
  1328  07B5  3000               	movlw	0
  1329  07B6  120A  118A  250F  120A  118A  	fcall	_LCDGoto
  1330                           
  1331                           ;newmain.c: 631:                     LCDPutStr("L3:ON  FAN:ON   ");
  1332  07BB  3034               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1333  07BC  120A  118A  2477  120A  118A  	fcall	_LCDPutStr
  1334                           
  1335                           ;newmain.c: 632:                     while(RC0 == 0)
  1336  07C1  2FCC               	goto	l1275
  1337  07C2                     l1273:
  1338                           
  1339                           ;newmain.c: 633:                     {;newmain.c: 634:                         clap4();
  1340  07C2  120A  118A  2437  120A  118A  	fcall	_clap4
  1341                           
  1342                           ;newmain.c: 635:                         ngoaiduong2();
  1343  07C7  120A  118A  256D  120A  118A  	fcall	_ngoaiduong2
  1344  07CC                     l1275:
  1345                           
  1346                           ;newmain.c: 632:                     while(RC0 == 0)
  1347  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1348  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1349  07CE  1C07               	btfss	7,0	;volatile
  1350  07CF  2FD1               	goto	u641
  1351  07D0  2FD2               	goto	u640
  1352  07D1                     u641:
  1353  07D1  2FC2               	goto	l1273
  1354  07D2                     u640:
  1355  07D2  2E55               	goto	l1157
  1356  07D3                     l74:	
  1357                           ;newmain.c: 640:         }
  1358                           
  1359  07D3  2E55               	goto	l1157
  1360  07D4  120A  118A  2800   	ljmp	start
  1361  07D7                     __end_of_main:
  1362                           
  1363                           	psect	text1
  1364  056D                     __ptext1:	
  1365 ;; *************** function _ngoaiduong2 *****************
  1366 ;; Defined at:
  1367 ;;		line 488 in file "newmain.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;		None
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;		None
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      void 
  1374 ;; Registers used:
  1375 ;;		wreg, status,2, status,0
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1381 ;;      Params:         0       0       0       0       0
  1382 ;;      Locals:         0       0       0       0       0
  1383 ;;      Temps:          1       0       0       0       0
  1384 ;;      Totals:         1       0       0       0       0
  1385 ;;Total ram usage:        1 bytes
  1386 ;; Hardware stack levels used: 1
  1387 ;; This function calls:
  1388 ;;		Nothing
  1389 ;; This function is called by:
  1390 ;;		_main
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394  056D                     _ngoaiduong2:	
  1395                           ;psect for function _ngoaiduong2
  1396                           
  1397  056D                     l1067:	
  1398                           ;incstack = 0
  1399                           ; Regs used in _ngoaiduong2: [wreg+status,2+status,0]
  1400                           
  1401                           
  1402                           ;newmain.c: 490:     for(i = 0; i < 100; i++)
  1403  056D  01FD               	clrf	_i
  1404  056E                     l1069:
  1405  056E  3064               	movlw	100
  1406  056F  027D               	subwf	_i,w
  1407  0570  1C03               	skipc
  1408  0571  2D73               	goto	u381
  1409  0572  2D74               	goto	u380
  1410  0573                     u381:
  1411  0573  2D75               	goto	l56
  1412  0574                     u380:
  1413  0574  2D89               	goto	l1083
  1414  0575                     l56:
  1415                           
  1416                           ;newmain.c: 491:     {;newmain.c: 492:         if(RC0 == 1) return;
  1417  0575  1283               	bcf	3,5	;RP0=0, select bank0
  1418  0576  1303               	bcf	3,6	;RP1=0, select bank0
  1419  0577  1C07               	btfss	7,0	;volatile
  1420  0578  2D7A               	goto	u391
  1421  0579  2D7B               	goto	u390
  1422  057A                     u391:
  1423  057A  2D7C               	goto	l1075
  1424  057B                     u390:
  1425  057B  2DA6               	goto	l59
  1426  057C                     l1075:
  1427                           
  1428                           ;newmain.c: 493:         PORTA = 0;
  1429  057C  0185               	clrf	5	;volatile
  1430  057D                     l1077:
  1431                           
  1432                           ;newmain.c: 494:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1433  057D  30C7               	movlw	199
  1434  057E  00F0               	movwf	??_ngoaiduong2
  1435  057F                     u727:
  1436  057F  2D80               	nop2
  1437  0580  0BF0               	decfsz	??_ngoaiduong2,f
  1438  0581  2D7F               	goto	u727
  1439  0582  2D83               	nop2
  1440  0583  2D84               	nop2
  1441  0584                     l1079:
  1442                           
  1443                           ;newmain.c: 495:     }
  1444  0584  3001               	movlw	1
  1445  0585  00F0               	movwf	??_ngoaiduong2
  1446  0586  0870               	movf	??_ngoaiduong2,w
  1447  0587  07FD               	addwf	_i,f
  1448  0588  2D6E               	goto	l1069
  1449  0589                     l1083:
  1450                           
  1451                           ;newmain.c: 496:     for(i = 0; i < 100; i++)
  1452  0589  01FD               	clrf	_i
  1453  058A                     l1085:
  1454  058A  3064               	movlw	100
  1455  058B  027D               	subwf	_i,w
  1456  058C  1C03               	skipc
  1457  058D  2D8F               	goto	u401
  1458  058E  2D90               	goto	u400
  1459  058F                     u401:
  1460  058F  2D91               	goto	l60
  1461  0590                     u400:
  1462  0590  2DA6               	goto	l59
  1463  0591                     l60:
  1464                           
  1465                           ;newmain.c: 497:     {;newmain.c: 498:         if(RC0 == 1) return;
  1466  0591  1283               	bcf	3,5	;RP0=0, select bank0
  1467  0592  1303               	bcf	3,6	;RP1=0, select bank0
  1468  0593  1C07               	btfss	7,0	;volatile
  1469  0594  2D96               	goto	u411
  1470  0595  2D97               	goto	u410
  1471  0596                     u411:
  1472  0596  2D98               	goto	l1091
  1473  0597                     u410:
  1474  0597  2DA6               	goto	l59
  1475  0598                     l1091:
  1476                           
  1477                           ;newmain.c: 499:         PORTA = 0XFF;
  1478  0598  30FF               	movlw	255
  1479  0599  0085               	movwf	5	;volatile
  1480                           
  1481                           ;newmain.c: 500:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1482  059A  30C7               	movlw	199
  1483  059B  00F0               	movwf	??_ngoaiduong2
  1484  059C                     u737:
  1485  059C  2D9D               	nop2
  1486  059D  0BF0               	decfsz	??_ngoaiduong2,f
  1487  059E  2D9C               	goto	u737
  1488  059F  2DA0               	nop2
  1489  05A0  2DA1               	nop2
  1490  05A1                     l1093:
  1491                           
  1492                           ;newmain.c: 501:     }
  1493  05A1  3001               	movlw	1
  1494  05A2  00F0               	movwf	??_ngoaiduong2
  1495  05A3  0870               	movf	??_ngoaiduong2,w
  1496  05A4  07FD               	addwf	_i,f
  1497  05A5  2D8A               	goto	l1085
  1498  05A6                     l59:
  1499  05A6  0008               	return
  1500  05A7                     __end_of_ngoaiduong2:
  1501                           
  1502                           	psect	text2
  1503  043C                     __ptext2:	
  1504 ;; *************** function _ngoaiduong1 *****************
  1505 ;; Defined at:
  1506 ;;		line 484 in file "newmain.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;		None
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;		None
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      void 
  1513 ;; Registers used:
  1514 ;;		wreg
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1520 ;;      Params:         0       0       0       0       0
  1521 ;;      Locals:         0       0       0       0       0
  1522 ;;      Temps:          0       0       0       0       0
  1523 ;;      Totals:         0       0       0       0       0
  1524 ;;Total ram usage:        0 bytes
  1525 ;; Hardware stack levels used: 1
  1526 ;; This function calls:
  1527 ;;		Nothing
  1528 ;; This function is called by:
  1529 ;;		_main
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533  043C                     _ngoaiduong1:	
  1534                           ;psect for function _ngoaiduong1
  1535                           
  1536  043C                     l1065:	
  1537                           ;incstack = 0
  1538                           ; Regs used in _ngoaiduong1: [wreg]
  1539                           
  1540                           
  1541                           ;newmain.c: 486:     PORTA = 0xFF;
  1542  043C  30FF               	movlw	255
  1543  043D  1283               	bcf	3,5	;RP0=0, select bank0
  1544  043E  1303               	bcf	3,6	;RP1=0, select bank0
  1545  043F  0085               	movwf	5	;volatile
  1546  0440                     l53:
  1547  0440  0008               	return
  1548  0441                     __end_of_ngoaiduong1:
  1549                           
  1550                           	psect	text3
  1551  0437                     __ptext3:	
  1552 ;; *************** function _clap4 *****************
  1553 ;; Defined at:
  1554 ;;		line 480 in file "newmain.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;		None
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;		None
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      void 
  1561 ;; Registers used:
  1562 ;;		wreg
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1568 ;;      Params:         0       0       0       0       0
  1569 ;;      Locals:         0       0       0       0       0
  1570 ;;      Temps:          0       0       0       0       0
  1571 ;;      Totals:         0       0       0       0       0
  1572 ;;Total ram usage:        0 bytes
  1573 ;; Hardware stack levels used: 1
  1574 ;; This function calls:
  1575 ;;		Nothing
  1576 ;; This function is called by:
  1577 ;;		_main
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581  0437                     _clap4:	
  1582                           ;psect for function _clap4
  1583                           
  1584  0437                     l1063:	
  1585                           ;incstack = 0
  1586                           ; Regs used in _clap4: [wreg]
  1587                           
  1588                           
  1589                           ;newmain.c: 482:     PORTD = 0b11111111;
  1590  0437  30FF               	movlw	255
  1591  0438  1283               	bcf	3,5	;RP0=0, select bank0
  1592  0439  1303               	bcf	3,6	;RP1=0, select bank0
  1593  043A  0088               	movwf	8	;volatile
  1594  043B                     l50:
  1595  043B  0008               	return
  1596  043C                     __end_of_clap4:
  1597                           
  1598                           	psect	text4
  1599  0432                     __ptext4:	
  1600 ;; *************** function _clap3 *****************
  1601 ;; Defined at:
  1602 ;;		line 476 in file "newmain.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;		None
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;		None
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      void 
  1609 ;; Registers used:
  1610 ;;		wreg
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1616 ;;      Params:         0       0       0       0       0
  1617 ;;      Locals:         0       0       0       0       0
  1618 ;;      Temps:          0       0       0       0       0
  1619 ;;      Totals:         0       0       0       0       0
  1620 ;;Total ram usage:        0 bytes
  1621 ;; Hardware stack levels used: 1
  1622 ;; This function calls:
  1623 ;;		Nothing
  1624 ;; This function is called by:
  1625 ;;		_main
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629  0432                     _clap3:	
  1630                           ;psect for function _clap3
  1631                           
  1632  0432                     l1061:	
  1633                           ;incstack = 0
  1634                           ; Regs used in _clap3: [wreg]
  1635                           
  1636                           
  1637                           ;newmain.c: 478:     PORTD = 0b11000000;
  1638  0432  30C0               	movlw	192
  1639  0433  1283               	bcf	3,5	;RP0=0, select bank0
  1640  0434  1303               	bcf	3,6	;RP1=0, select bank0
  1641  0435  0088               	movwf	8	;volatile
  1642  0436                     l47:
  1643  0436  0008               	return
  1644  0437                     __end_of_clap3:
  1645                           
  1646                           	psect	text5
  1647  042D                     __ptext5:	
  1648 ;; *************** function _clap2 *****************
  1649 ;; Defined at:
  1650 ;;		line 472 in file "newmain.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;		None
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;		None
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      void 
  1657 ;; Registers used:
  1658 ;;		wreg
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1664 ;;      Params:         0       0       0       0       0
  1665 ;;      Locals:         0       0       0       0       0
  1666 ;;      Temps:          0       0       0       0       0
  1667 ;;      Totals:         0       0       0       0       0
  1668 ;;Total ram usage:        0 bytes
  1669 ;; Hardware stack levels used: 1
  1670 ;; This function calls:
  1671 ;;		Nothing
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677  042D                     _clap2:	
  1678                           ;psect for function _clap2
  1679                           
  1680  042D                     l1059:	
  1681                           ;incstack = 0
  1682                           ; Regs used in _clap2: [wreg]
  1683                           
  1684                           
  1685                           ;newmain.c: 474:     PORTD = 0b11001111;
  1686  042D  30CF               	movlw	207
  1687  042E  1283               	bcf	3,5	;RP0=0, select bank0
  1688  042F  1303               	bcf	3,6	;RP1=0, select bank0
  1689  0430  0088               	movwf	8	;volatile
  1690  0431                     l44:
  1691  0431  0008               	return
  1692  0432                     __end_of_clap2:
  1693                           
  1694                           	psect	text6
  1695  0428                     __ptext6:	
  1696 ;; *************** function _clap1 *****************
  1697 ;; Defined at:
  1698 ;;		line 468 in file "newmain.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1712 ;;      Params:         0       0       0       0       0
  1713 ;;      Locals:         0       0       0       0       0
  1714 ;;      Temps:          0       0       0       0       0
  1715 ;;      Totals:         0       0       0       0       0
  1716 ;;Total ram usage:        0 bytes
  1717 ;; Hardware stack levels used: 1
  1718 ;; This function calls:
  1719 ;;		Nothing
  1720 ;; This function is called by:
  1721 ;;		_main
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725  0428                     _clap1:	
  1726                           ;psect for function _clap1
  1727                           
  1728  0428                     l1057:	
  1729                           ;incstack = 0
  1730                           ; Regs used in _clap1: [wreg]
  1731                           
  1732                           
  1733                           ;newmain.c: 470:     PORTD = 0b00111111;
  1734  0428  303F               	movlw	63
  1735  0429  1283               	bcf	3,5	;RP0=0, select bank0
  1736  042A  1303               	bcf	3,6	;RP1=0, select bank0
  1737  042B  0088               	movwf	8	;volatile
  1738  042C                     l41:
  1739  042C  0008               	return
  1740  042D                     __end_of_clap1:
  1741                           
  1742                           	psect	text7
  1743  045C                     __ptext7:	
  1744 ;; *************** function _buzzer *****************
  1745 ;; Defined at:
  1746 ;;		line 503 in file "newmain.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;  time            1    wreg     unsigned char 
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;  time            1    1[COMMON] unsigned char 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, status,2, status,0
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1760 ;;      Params:         0       0       0       0       0
  1761 ;;      Locals:         1       0       0       0       0
  1762 ;;      Temps:          1       0       0       0       0
  1763 ;;      Totals:         2       0       0       0       0
  1764 ;;Total ram usage:        2 bytes
  1765 ;; Hardware stack levels used: 1
  1766 ;; This function calls:
  1767 ;;		Nothing
  1768 ;; This function is called by:
  1769 ;;		_main
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773  045C                     _buzzer:	
  1774                           ;psect for function _buzzer
  1775                           
  1776                           
  1777                           ;incstack = 0
  1778                           ; Regs used in _buzzer: [wreg+status,2+status,0]
  1779                           ;buzzer@time stored from wreg
  1780  045C  00F1               	movwf	buzzer@time
  1781  045D                     l1097:
  1782                           
  1783                           ;newmain.c: 503: void buzzer(unsigned char time);newmain.c: 504: {;newmain.c: 505:     f
      +                          or(i = 0; i < time; i++)
  1784  045D  01FD               	clrf	_i
  1785  045E  2C6D               	goto	l1103
  1786  045F                     l66:
  1787                           
  1788                           ;newmain.c: 506:     {;newmain.c: 507:         RC2 = 1;
  1789  045F  1283               	bcf	3,5	;RP0=0, select bank0
  1790  0460  1303               	bcf	3,6	;RP1=0, select bank0
  1791  0461  1507               	bsf	7,2	;volatile
  1792  0462                     l1099:
  1793                           
  1794                           ;newmain.c: 508:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1795  0462  30C7               	movlw	199
  1796  0463  00F0               	movwf	??_buzzer
  1797  0464                     u747:
  1798  0464  2C65               	nop2
  1799  0465  0BF0               	decfsz	??_buzzer,f
  1800  0466  2C64               	goto	u747
  1801  0467  2C68               	nop2
  1802  0468  2C69               	nop2
  1803  0469                     l1101:
  1804                           
  1805                           ;newmain.c: 509:     }
  1806  0469  3001               	movlw	1
  1807  046A  00F0               	movwf	??_buzzer
  1808  046B  0870               	movf	??_buzzer,w
  1809  046C  07FD               	addwf	_i,f
  1810  046D                     l1103:
  1811  046D  0871               	movf	buzzer@time,w
  1812  046E  027D               	subwf	_i,w
  1813  046F  1C03               	skipc
  1814  0470  2C72               	goto	u421
  1815  0471  2C73               	goto	u420
  1816  0472                     u421:
  1817  0472  2C5F               	goto	l66
  1818  0473                     u420:
  1819  0473                     l67:
  1820                           
  1821                           ;newmain.c: 510:     RC2 = 0;
  1822  0473  1283               	bcf	3,5	;RP0=0, select bank0
  1823  0474  1303               	bcf	3,6	;RP1=0, select bank0
  1824  0475  1107               	bcf	7,2	;volatile
  1825  0476                     l68:
  1826  0476  0008               	return
  1827  0477                     __end_of_buzzer:
  1828                           
  1829                           	psect	text8
  1830  053C                     __ptext8:	
  1831 ;; *************** function _LCD_Initialize *****************
  1832 ;; Defined at:
  1833 ;;		line 45 in file "lcd.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;		None
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;		None
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      void 
  1840 ;; Registers used:
  1841 ;;		wreg, status,2, status,0, pclath, cstack
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1847 ;;      Params:         0       0       0       0       0
  1848 ;;      Locals:         0       0       0       0       0
  1849 ;;      Temps:          2       0       0       0       0
  1850 ;;      Totals:         2       0       0       0       0
  1851 ;;Total ram usage:        2 bytes
  1852 ;; Hardware stack levels used: 1
  1853 ;; Hardware stack levels required when called: 2
  1854 ;; This function calls:
  1855 ;;		_LCDPutCmd
  1856 ;; This function is called by:
  1857 ;;		_main
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861  053C                     _LCD_Initialize:	
  1862                           ;psect for function _LCD_Initialize
  1863                           
  1864  053C                     l1105:	
  1865                           ;incstack = 0
  1866                           ; Regs used in _LCD_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1867                           
  1868                           
  1869                           ;lcd.c: 48:     PORTB = 0;
  1870  053C  1283               	bcf	3,5	;RP0=0, select bank0
  1871  053D  1303               	bcf	3,6	;RP1=0, select bank0
  1872  053E  0186               	clrf	6	;volatile
  1873                           
  1874                           ;lcd.c: 50:     TRISB = 0x00;
  1875  053F  1683               	bsf	3,5	;RP0=1, select bank1
  1876  0540  1303               	bcf	3,6	;RP1=0, select bank1
  1877  0541  0186               	clrf	6	;volatile
  1878  0542                     l1107:
  1879                           
  1880                           ;lcd.c: 53:     PORTBbits.RB7 = 1;
  1881  0542  1283               	bcf	3,5	;RP0=0, select bank0
  1882  0543  1303               	bcf	3,6	;RP1=0, select bank0
  1883  0544  1786               	bsf	6,7	;volatile
  1884  0545                     l1109:
  1885                           
  1886                           ;lcd.c: 56:     _delay((unsigned long)((15)*(4000000/4000.0)));
  1887  0545  3014               	movlw	20
  1888  0546  00F8               	movwf	??_LCD_Initialize+1
  1889  0547  3079               	movlw	121
  1890  0548  00F7               	movwf	??_LCD_Initialize
  1891  0549                     u757:
  1892  0549  0BF7               	decfsz	??_LCD_Initialize,f
  1893  054A  2D49               	goto	u757
  1894  054B  0BF8               	decfsz	??_LCD_Initialize+1,f
  1895  054C  2D49               	goto	u757
  1896  054D  2D4E               	nop2
  1897  054E                     l1111:
  1898                           
  1899                           ;lcd.c: 59:     LCDPutCmd(0x32);
  1900  054E  3032               	movlw	50
  1901  054F  120A  118A  24E3  120A  118A  	fcall	_LCDPutCmd
  1902  0554                     l1113:
  1903                           
  1904                           ;lcd.c: 62:     LCDPutCmd(0x28);
  1905  0554  3028               	movlw	40
  1906  0555  120A  118A  24E3  120A  118A  	fcall	_LCDPutCmd
  1907  055A                     l1115:
  1908                           
  1909                           ;lcd.c: 65:     LCDPutCmd(0x0C);
  1910  055A  300C               	movlw	12
  1911  055B  120A  118A  24E3  120A  118A  	fcall	_LCDPutCmd
  1912  0560                     l1117:
  1913                           
  1914                           ;lcd.c: 67:     LCDPutCmd(0x01);
  1915  0560  3001               	movlw	1
  1916  0561  120A  118A  24E3  120A  118A  	fcall	_LCDPutCmd
  1917  0566                     l1119:
  1918                           
  1919                           ;lcd.c: 70:     LCDPutCmd(0x06);
  1920  0566  3006               	movlw	6
  1921  0567  120A  118A  24E3  120A  118A  	fcall	_LCDPutCmd
  1922  056C                     l121:
  1923  056C  0008               	return
  1924  056D                     __end_of_LCD_Initialize:
  1925                           
  1926                           	psect	text9
  1927  0477                     __ptext9:	
  1928 ;; *************** function _LCDPutStr *****************
  1929 ;; Defined at:
  1930 ;;		line 134 in file "lcd.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  str             1    wreg     PTR const unsigned char 
  1933 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  1934 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
  1935 ;;		 -> STR_4(17), STR_3(17), STR_2(16), STR_1(17), 
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;  str             1    9[COMMON] PTR const unsigned char 
  1938 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  1939 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(17), 
  1940 ;;		 -> STR_4(17), STR_3(17), STR_2(16), STR_1(17), 
  1941 ;;  i               1    8[COMMON] unsigned char 
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      void 
  1944 ;; Registers used:
  1945 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1951 ;;      Params:         0       0       0       0       0
  1952 ;;      Locals:         2       0       0       0       0
  1953 ;;      Temps:          1       0       0       0       0
  1954 ;;      Totals:         3       0       0       0       0
  1955 ;;Total ram usage:        3 bytes
  1956 ;; Hardware stack levels used: 1
  1957 ;; Hardware stack levels required when called: 2
  1958 ;; This function calls:
  1959 ;;		_LCDPutChar
  1960 ;; This function is called by:
  1961 ;;		_main
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965  0477                     _LCDPutStr:	
  1966                           ;psect for function _LCDPutStr
  1967                           
  1968                           
  1969                           ;incstack = 0
  1970                           ; Regs used in _LCDPutStr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1971                           ;LCDPutStr@str stored from wreg
  1972  0477  00F9               	movwf	LCDPutStr@str
  1973  0478                     l1135:
  1974                           
  1975                           ;lcd.c: 134: void LCDPutStr(const char *str);lcd.c: 135: {;lcd.c: 136:     uint8_t i=0;
  1976  0478  01F8               	clrf	LCDPutStr@i
  1977                           
  1978                           ;lcd.c: 139:     while (str[i])
  1979  0479  2C8B               	goto	l1141
  1980  047A                     l1137:
  1981                           
  1982                           ;lcd.c: 140:     {;lcd.c: 142:         LCDPutChar(str[i++]);
  1983  047A  0878               	movf	LCDPutStr@i,w
  1984  047B  0779               	addwf	LCDPutStr@str,w
  1985  047C  0084               	movwf	4
  1986  047D  120A  118A  2003  120A  118A  	fcall	stringdir
  1987  0482  120A  118A  24BC  120A  118A  	fcall	_LCDPutChar
  1988  0487                     l1139:
  1989  0487  3001               	movlw	1
  1990  0488  00F7               	movwf	??_LCDPutStr
  1991  0489  0877               	movf	??_LCDPutStr,w
  1992  048A  07F8               	addwf	LCDPutStr@i,f
  1993  048B                     l1141:
  1994                           
  1995                           ;lcd.c: 139:     while (str[i])
  1996  048B  0878               	movf	LCDPutStr@i,w
  1997  048C  0779               	addwf	LCDPutStr@str,w
  1998  048D  0084               	movwf	4
  1999  048E  120A  118A  2003  120A  118A  	fcall	stringdir
  2000  0493  3A00               	xorlw	0
  2001  0494  1D03               	skipz
  2002  0495  2C97               	goto	u461
  2003  0496  2C98               	goto	u460
  2004  0497                     u461:
  2005  0497  2C7A               	goto	l1137
  2006  0498                     u460:
  2007  0498                     l136:
  2008  0498  0008               	return
  2009  0499                     __end_of_LCDPutStr:
  2010                           
  2011                           	psect	text10
  2012  04BC                     __ptext10:	
  2013 ;; *************** function _LCDPutChar *****************
  2014 ;; Defined at:
  2015 ;;		line 102 in file "lcd.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  ch              1    wreg     unsigned char 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  ch              1    6[COMMON] unsigned char 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  1    wreg      void 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2, status,0, pclath, cstack
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2029 ;;      Params:         0       0       0       0       0
  2030 ;;      Locals:         1       0       0       0       0
  2031 ;;      Temps:          2       0       0       0       0
  2032 ;;      Totals:         3       0       0       0       0
  2033 ;;Total ram usage:        3 bytes
  2034 ;; Hardware stack levels used: 1
  2035 ;; Hardware stack levels required when called: 1
  2036 ;; This function calls:
  2037 ;;		_LCDWriteNibble
  2038 ;; This function is called by:
  2039 ;;		_LCDPutStr
  2040 ;;		_LCDPutStr2
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044  04BC                     _LCDPutChar:	
  2045                           ;psect for function _LCDPutChar
  2046                           
  2047                           
  2048                           ;incstack = 0
  2049                           ; Regs used in _LCDPutChar: [wreg+status,2+status,0+pclath+cstack]
  2050                           ;LCDPutChar@ch stored from wreg
  2051  04BC  00F6               	movwf	LCDPutChar@ch
  2052  04BD                     l1049:
  2053                           
  2054                           ;lcd.c: 102: void LCDPutChar(uint8_t ch);lcd.c: 103: {;lcd.c: 104:     _delay((unsigned 
      +                          long)((5)*(4000000/4000.0)));
  2055  04BD  3007               	movlw	7
  2056  04BE  00F5               	movwf	??_LCDPutChar+1
  2057  04BF  307D               	movlw	125
  2058  04C0  00F4               	movwf	??_LCDPutChar
  2059  04C1                     u767:
  2060  04C1  0BF4               	decfsz	??_LCDPutChar,f
  2061  04C2  2CC1               	goto	u767
  2062  04C3  0BF5               	decfsz	??_LCDPutChar+1,f
  2063  04C4  2CC1               	goto	u767
  2064  04C5                     l1051:
  2065                           
  2066                           ;lcd.c: 107:     LCDWriteNibble(ch,1);
  2067  04C5  01F0               	clrf	LCDWriteNibble@rs
  2068  04C6  0AF0               	incf	LCDWriteNibble@rs,f
  2069  04C7  0876               	movf	LCDPutChar@ch,w
  2070  04C8  120A  118A  2499  120A  118A  	fcall	_LCDWriteNibble
  2071  04CD                     l1053:
  2072                           
  2073                           ;lcd.c: 110:     ch = (ch << 4);
  2074  04CD  0876               	movf	LCDPutChar@ch,w
  2075  04CE  00F4               	movwf	??_LCDPutChar
  2076  04CF  3003               	movlw	3
  2077  04D0                     u375:
  2078  04D0  1003               	clrc
  2079  04D1  0DF4               	rlf	??_LCDPutChar,f
  2080  04D2  3EFF               	addlw	-1
  2081  04D3  1D03               	skipz
  2082  04D4  2CD0               	goto	u375
  2083  04D5  1003               	clrc
  2084  04D6  0D74               	rlf	??_LCDPutChar,w
  2085  04D7  00F5               	movwf	??_LCDPutChar+1
  2086  04D8  0875               	movf	??_LCDPutChar+1,w
  2087  04D9  00F6               	movwf	LCDPutChar@ch
  2088  04DA                     l1055:
  2089                           
  2090                           ;lcd.c: 113:     LCDWriteNibble(ch,1);
  2091  04DA  01F0               	clrf	LCDWriteNibble@rs
  2092  04DB  0AF0               	incf	LCDWriteNibble@rs,f
  2093  04DC  0876               	movf	LCDPutChar@ch,w
  2094  04DD  120A  118A  2499  120A  118A  	fcall	_LCDWriteNibble
  2095  04E2                     l127:
  2096  04E2  0008               	return
  2097  04E3                     __end_of_LCDPutChar:
  2098                           
  2099                           	psect	text11
  2100  050F                     __ptext11:	
  2101 ;; *************** function _LCDGoto *****************
  2102 ;; Defined at:
  2103 ;;		line 146 in file "lcd.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  pos             1    wreg     unsigned char 
  2106 ;;  ln              1    7[COMMON] unsigned char 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  pos             1   12[COMMON] unsigned char 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      void 
  2111 ;; Registers used:
  2112 ;;		wreg, status,2, status,0, pclath, cstack
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2118 ;;      Params:         1       0       0       0       0
  2119 ;;      Locals:         3       0       0       0       0
  2120 ;;      Temps:          2       0       0       0       0
  2121 ;;      Totals:         6       0       0       0       0
  2122 ;;Total ram usage:        6 bytes
  2123 ;; Hardware stack levels used: 1
  2124 ;; Hardware stack levels required when called: 2
  2125 ;; This function calls:
  2126 ;;		_LCDPutCmd
  2127 ;; This function is called by:
  2128 ;;		_main
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132  050F                     _LCDGoto:	
  2133                           ;psect for function _LCDGoto
  2134                           
  2135                           
  2136                           ;incstack = 0
  2137                           ; Regs used in _LCDGoto: [wreg+status,2+status,0+pclath+cstack]
  2138                           ;LCDGoto@pos stored from wreg
  2139  050F  00FC               	movwf	LCDGoto@pos
  2140  0510                     l1121:
  2141                           
  2142                           ;lcd.c: 146: void LCDGoto(uint8_t pos,uint8_t ln);lcd.c: 147: {;lcd.c: 149:     if ((ln 
      +                          > (2 -1)) || (pos > (16 -1)))
  2143  0510  3002               	movlw	2
  2144  0511  0277               	subwf	LCDGoto@ln,w
  2145  0512  1803               	skipnc
  2146  0513  2D15               	goto	u431
  2147  0514  2D16               	goto	u430
  2148  0515                     u431:
  2149  0515  2D3B               	goto	l142
  2150  0516                     u430:
  2151  0516                     l1123:
  2152  0516  3010               	movlw	16
  2153  0517  027C               	subwf	LCDGoto@pos,w
  2154  0518  1C03               	skipc
  2155  0519  2D1B               	goto	u441
  2156  051A  2D1C               	goto	u440
  2157  051B                     u441:
  2158  051B  2D1D               	goto	l1125
  2159  051C                     u440:
  2160  051C  2D3B               	goto	l142
  2161  051D                     l1125:
  2162                           
  2163                           ;lcd.c: 156:     LCDPutCmd((ln == 1) ? (0xC0 | pos) : (0x80 | pos));
  2164  051D  0377               	decf	LCDGoto@ln,w
  2165  051E  1903               	btfsc	3,2
  2166  051F  2D21               	goto	u451
  2167  0520  2D22               	goto	u450
  2168  0521                     u451:
  2169  0521  2D28               	goto	l1129
  2170  0522                     u450:
  2171  0522                     l1127:
  2172  0522  3080               	movlw	128
  2173  0523  047C               	iorwf	LCDGoto@pos,w
  2174  0524  00FA               	movwf	_LCDGoto$172
  2175  0525  3000               	movlw	0
  2176  0526  00FB               	movwf	_LCDGoto$172+1
  2177  0527  2D2D               	goto	l1131
  2178  0528                     l1129:
  2179  0528  30C0               	movlw	192
  2180  0529  047C               	iorwf	LCDGoto@pos,w
  2181  052A  00FA               	movwf	_LCDGoto$172
  2182  052B  3000               	movlw	0
  2183  052C  00FB               	movwf	_LCDGoto$172+1
  2184  052D                     l1131:
  2185  052D  087A               	movf	_LCDGoto$172,w
  2186  052E  120A  118A  24E3  120A  118A  	fcall	_LCDPutCmd
  2187  0533                     l1133:
  2188                           
  2189                           ;lcd.c: 159:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2190  0533  3007               	movlw	7
  2191  0534  00F9               	movwf	??_LCDGoto+1
  2192  0535  307D               	movlw	125
  2193  0536  00F8               	movwf	??_LCDGoto
  2194  0537                     u777:
  2195  0537  0BF8               	decfsz	??_LCDGoto,f
  2196  0538  2D37               	goto	u777
  2197  0539  0BF9               	decfsz	??_LCDGoto+1,f
  2198  053A  2D37               	goto	u777
  2199  053B                     l142:
  2200  053B  0008               	return
  2201  053C                     __end_of_LCDGoto:
  2202                           
  2203                           	psect	text12
  2204  04E3                     __ptext12:	
  2205 ;; *************** function _LCDPutCmd *****************
  2206 ;; Defined at:
  2207 ;;		line 117 in file "lcd.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;  ch              1    wreg     unsigned char 
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;  ch              1    6[COMMON] unsigned char 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      void 
  2214 ;; Registers used:
  2215 ;;		wreg, status,2, status,0, pclath, cstack
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2221 ;;      Params:         0       0       0       0       0
  2222 ;;      Locals:         1       0       0       0       0
  2223 ;;      Temps:          2       0       0       0       0
  2224 ;;      Totals:         3       0       0       0       0
  2225 ;;Total ram usage:        3 bytes
  2226 ;; Hardware stack levels used: 1
  2227 ;; Hardware stack levels required when called: 1
  2228 ;; This function calls:
  2229 ;;		_LCDWriteNibble
  2230 ;; This function is called by:
  2231 ;;		_LCD_Initialize
  2232 ;;		_LCDGoto
  2233 ;;		_LCDPutStr2
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237  04E3                     _LCDPutCmd:	
  2238                           ;psect for function _LCDPutCmd
  2239                           
  2240                           
  2241                           ;incstack = 0
  2242                           ; Regs used in _LCDPutCmd: [wreg+status,2+status,0+pclath+cstack]
  2243                           ;LCDPutCmd@ch stored from wreg
  2244  04E3  00F6               	movwf	LCDPutCmd@ch
  2245  04E4                     l1039:
  2246                           
  2247                           ;lcd.c: 117: void LCDPutCmd(uint8_t ch);lcd.c: 118: {;lcd.c: 119:     _delay((unsigned l
      +                          ong)((5)*(4000000/4000.0)));
  2248  04E4  3007               	movlw	7
  2249  04E5  00F5               	movwf	??_LCDPutCmd+1
  2250  04E6  307D               	movlw	125
  2251  04E7  00F4               	movwf	??_LCDPutCmd
  2252  04E8                     u787:
  2253  04E8  0BF4               	decfsz	??_LCDPutCmd,f
  2254  04E9  2CE8               	goto	u787
  2255  04EA  0BF5               	decfsz	??_LCDPutCmd+1,f
  2256  04EB  2CE8               	goto	u787
  2257  04EC                     l1041:
  2258                           
  2259                           ;lcd.c: 122:     LCDWriteNibble(ch,0);
  2260  04EC  01F0               	clrf	LCDWriteNibble@rs
  2261  04ED  0876               	movf	LCDPutCmd@ch,w
  2262  04EE  120A  118A  2499  120A  118A  	fcall	_LCDWriteNibble
  2263  04F3                     l1043:
  2264                           
  2265                           ;lcd.c: 125:     ch = (ch << 4);
  2266  04F3  0876               	movf	LCDPutCmd@ch,w
  2267  04F4  00F4               	movwf	??_LCDPutCmd
  2268  04F5  3003               	movlw	3
  2269  04F6                     u365:
  2270  04F6  1003               	clrc
  2271  04F7  0DF4               	rlf	??_LCDPutCmd,f
  2272  04F8  3EFF               	addlw	-1
  2273  04F9  1D03               	skipz
  2274  04FA  2CF6               	goto	u365
  2275  04FB  1003               	clrc
  2276  04FC  0D74               	rlf	??_LCDPutCmd,w
  2277  04FD  00F5               	movwf	??_LCDPutCmd+1
  2278  04FE  0875               	movf	??_LCDPutCmd+1,w
  2279  04FF  00F6               	movwf	LCDPutCmd@ch
  2280  0500                     l1045:
  2281                           
  2282                           ;lcd.c: 127:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2283  0500  30C7               	movlw	199
  2284  0501  00F4               	movwf	??_LCDPutCmd
  2285  0502                     u797:
  2286  0502  2D03               	nop2
  2287  0503  0BF4               	decfsz	??_LCDPutCmd,f
  2288  0504  2D02               	goto	u797
  2289  0505  2D06               	nop2
  2290  0506  2D07               	nop2
  2291  0507                     l1047:
  2292                           
  2293                           ;lcd.c: 130:     LCDWriteNibble(ch,0);
  2294  0507  01F0               	clrf	LCDWriteNibble@rs
  2295  0508  0876               	movf	LCDPutCmd@ch,w
  2296  0509  120A  118A  2499  120A  118A  	fcall	_LCDWriteNibble
  2297  050E                     l130:
  2298  050E  0008               	return
  2299  050F                     __end_of_LCDPutCmd:
  2300                           
  2301                           	psect	text13
  2302  0499                     __ptext13:	
  2303 ;; *************** function _LCDWriteNibble *****************
  2304 ;; Defined at:
  2305 ;;		line 75 in file "lcd.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;  ch              1    wreg     unsigned char 
  2308 ;;  rs              1    0[COMMON] unsigned char 
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;  ch              1    3[COMMON] unsigned char 
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      void 
  2313 ;; Registers used:
  2314 ;;		wreg, status,2, status,0
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2320 ;;      Params:         1       0       0       0       0
  2321 ;;      Locals:         1       0       0       0       0
  2322 ;;      Temps:          2       0       0       0       0
  2323 ;;      Totals:         4       0       0       0       0
  2324 ;;Total ram usage:        4 bytes
  2325 ;; Hardware stack levels used: 1
  2326 ;; This function calls:
  2327 ;;		Nothing
  2328 ;; This function is called by:
  2329 ;;		_LCDPutChar
  2330 ;;		_LCDPutCmd
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334  0499                     _LCDWriteNibble:	
  2335                           ;psect for function _LCDWriteNibble
  2336                           
  2337                           
  2338                           ;incstack = 0
  2339                           ; Regs used in _LCDWriteNibble: [wreg+status,2+status,0]
  2340                           ;LCDWriteNibble@ch stored from wreg
  2341  0499  00F3               	movwf	LCDWriteNibble@ch
  2342  049A                     l1025:
  2343                           
  2344                           ;lcd.c: 75: void LCDWriteNibble(uint8_t ch,uint8_t rs);lcd.c: 76: {;lcd.c: 78:     ch = 
      +                          (ch >> 4);
  2345  049A  0873               	movf	LCDWriteNibble@ch,w
  2346  049B  00F1               	movwf	??_LCDWriteNibble
  2347  049C  3004               	movlw	4
  2348  049D                     u355:
  2349  049D  1003               	clrc
  2350  049E  0CF1               	rrf	??_LCDWriteNibble,f
  2351  049F  3EFF               	addlw	-1
  2352  04A0  1D03               	skipz
  2353  04A1  2C9D               	goto	u355
  2354  04A2  0871               	movf	??_LCDWriteNibble,w
  2355  04A3  00F2               	movwf	??_LCDWriteNibble+1
  2356  04A4  0872               	movf	??_LCDWriteNibble+1,w
  2357  04A5  00F3               	movwf	LCDWriteNibble@ch
  2358  04A6                     l1027:
  2359                           
  2360                           ;lcd.c: 81:     ch = (ch & 0x0F);
  2361  04A6  0873               	movf	LCDWriteNibble@ch,w
  2362  04A7  390F               	andlw	15
  2363  04A8  00F1               	movwf	??_LCDWriteNibble
  2364  04A9  0871               	movf	??_LCDWriteNibble,w
  2365  04AA  00F3               	movwf	LCDWriteNibble@ch
  2366  04AB                     l1029:
  2367                           
  2368                           ;lcd.c: 84:     PORTB = (PORTB & 0xF0);
  2369  04AB  1283               	bcf	3,5	;RP0=0, select bank0
  2370  04AC  1303               	bcf	3,6	;RP1=0, select bank0
  2371  04AD  0806               	movf	6,w	;volatile
  2372  04AE  39F0               	andlw	240
  2373  04AF  0086               	movwf	6	;volatile
  2374                           
  2375                           ;lcd.c: 87:     PORTB = (PORTB | ch);
  2376  04B0  0806               	movf	6,w	;volatile
  2377  04B1  0473               	iorwf	LCDWriteNibble@ch,w
  2378  04B2  0086               	movwf	6	;volatile
  2379  04B3                     l1031:
  2380                           
  2381                           ;lcd.c: 90:     PORTBbits.RB4 = rs;
  2382  04B3  0C70               	rrf	LCDWriteNibble@rs,w
  2383  04B4  1C03               	skipc
  2384  04B5  1206               	bcf	6,4	;volatile
  2385  04B6  1803               	skipnc
  2386  04B7  1606               	bsf	6,4	;volatile
  2387  04B8                     l1033:
  2388                           
  2389                           ;lcd.c: 93:     PORTBbits.RB5 = 0;
  2390  04B8  1286               	bcf	6,5	;volatile
  2391  04B9                     l1035:
  2392                           
  2393                           ;lcd.c: 96:     PORTBbits.RB6 = 1;
  2394  04B9  1706               	bsf	6,6	;volatile
  2395  04BA                     l1037:
  2396                           
  2397                           ;lcd.c: 99:     PORTBbits.RB6 = 0;
  2398  04BA  1306               	bcf	6,6	;volatile
  2399  04BB                     l124:
  2400  04BB  0008               	return
  2401  04BC                     __end_of_LCDWriteNibble:
  2402  007E                     btemp	set	126	;btemp
  2403  007E                     wtemp0	set	126
  2404                           
  2405                           	psect	idloc
  2406                           
  2407                           ;Config register IDLOC0 @ 0x2000
  2408                           ;	unspecified, using default values
  2409  2000                     	org	8192
  2410  2000  3FFF               	dw	16383
  2411                           
  2412                           ;Config register IDLOC1 @ 0x2001
  2413                           ;	unspecified, using default values
  2414  2001                     	org	8193
  2415  2001  3FFF               	dw	16383
  2416                           
  2417                           ;Config register IDLOC2 @ 0x2002
  2418                           ;	unspecified, using default values
  2419  2002                     	org	8194
  2420  2002  3FFF               	dw	16383
  2421                           
  2422                           ;Config register IDLOC3 @ 0x2003
  2423                           ;	unspecified, using default values
  2424  2003                     	org	8195
  2425  2003  3FFF               	dw	16383
  2426                           
  2427                           	psect	config
  2428                           
  2429                           ;Config register CONFIG @ 0x2007
  2430                           ;	Oscillator Selection bits
  2431                           ;	FOSC = HS, HS oscillator
  2432                           ;	Watchdog Timer Enable bit
  2433                           ;	WDTE = OFF, WDT disabled
  2434                           ;	Power-up Timer Enable bit
  2435                           ;	PWRTE = OFF, PWRT disabled
  2436                           ;	Brown-out Reset Enable bit
  2437                           ;	BOREN = OFF, BOR disabled
  2438                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2439                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2440                           ;	Data EEPROM Memory Code Protection bit
  2441                           ;	CPD = OFF, Data EEPROM code protection off
  2442                           ;	Flash Program Memory Write Enable bits
  2443                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2444                           ;	In-Circuit Debugger Mode bit
  2445                           ;	DEBUG = 0x1, unprogrammed default
  2446                           ;	Flash Program Memory Code Protection bit
  2447                           ;	CP = OFF, Code protection off
  2448  2007                     	org	8199
  2449  2007  3F3A               	dw	16186

Data Sizes:
    Strings     118
    Constant    0
    Data        120
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      2      25
    BANK1            80      0      60
    BANK3            96      0      60
    BANK2            96      0       0

Pointer List with Targets:

    LCDPutStr@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[16]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_LCDGoto
    _LCD_Initialize->_LCDPutCmd
    _LCDPutStr->_LCDPutChar
    _LCDPutChar->_LCDWriteNibble
    _LCDGoto->_LCDPutCmd
    _LCDPutCmd->_LCDWriteNibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2937
                                              0 BANK0      2     2      0
                            _LCDGoto
                          _LCDPutStr
                     _LCD_Initialize
                             _buzzer
                              _clap1
                              _clap2
                              _clap3
                              _clap4
                        _ngoaiduong1
                        _ngoaiduong2
 ---------------------------------------------------------------------------------
 (1) _ngoaiduong2                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ngoaiduong1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clap4                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clap3                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clap2                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clap1                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buzzer                                               2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Initialize                                       2     2      0     461
                                              7 COMMON     2     2      0
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (1) _LCDPutStr                                            3     3      0     947
                                              7 COMMON     3     3      0
                         _LCDPutChar
 ---------------------------------------------------------------------------------
 (2) _LCDPutChar                                           3     3      0     461
                                              4 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (1) _LCDGoto                                              6     5      1    1507
                                              7 COMMON     6     5      1
                          _LCDPutCmd
 ---------------------------------------------------------------------------------
 (2) _LCDPutCmd                                            3     3      0     461
                                              4 COMMON     3     3      0
                     _LCDWriteNibble
 ---------------------------------------------------------------------------------
 (3) _LCDWriteNibble                                       4     3      1     394
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDGoto
     _LCDPutCmd
       _LCDWriteNibble
   _LCDPutStr
     _LCDPutChar
       _LCDWriteNibble
   _LCD_Initialize
     _LCDPutCmd
   _buzzer
   _clap1
   _clap2
   _clap3
   _clap4
   _ngoaiduong1
   _ngoaiduong2

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      3C       9       62.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3C       7       75.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      2      19       5       31.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      9F      12        0.0%
ABS                  0      0      9F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri May 27 23:57:47 2022

                      _i 007D                        _j 0034           _LCD_Initialize 053C  
                      pc 0002                       l41 042C                       l50 043B  
            ?_LCDPutChar 0070                       l44 0431                       l60 0591  
                     l53 0440                       l47 0436                       l56 0575  
                     l80 06BB                       l66 045F                       l74 07D3  
                     l67 0473                       l59 05A6                       l68 0476  
                     l84 06C2                       l76 0687                       fsr 0004  
                    l121 056C                      l130 050E                      l124 04BB  
                    l142 053B                      l127 04E2                      l136 0498  
                    _RC0 0038                      _RC2 003A                      _RC7 003F  
                    u400 0590                      u401 058F                      u410 0597  
                    u411 0596                      u420 0473                      u500 068B  
                    u421 0472                      u501 068A                      u430 0516  
                    u510 06C1                      u431 0515                      u511 06C0  
                    u440 051C                      u600 0757                      u520 06C6  
                    u441 051B                      u601 0756                      u521 06C5  
                    u450 0522                      u610 0790                      u530 06CB  
                    u355 049D                      u451 0521                      u611 078F  
                    u531 06CA                      u460 0498                      u380 0574  
                    u620 0797                      u540 06CF                      u365 04F6  
                    u461 0497                      u381 0573                      u621 0796  
                    u541 06CE                      u390 057B                      u630 079B  
                    u550 0708                      u470 065B                      u375 04D0  
                    u391 057A                      u631 079A                      u551 0707  
                    u471 065A                      u640 07D2                      u560 070F  
                    u480 0677                      u641 07D1                      u561 070E  
                    u481 0676                      u570 0713                      u490 0687  
                    u571 0712                      u491 0686                      u707 066D  
                    u580 074C                      u581 074B                      u717 06B7  
                    u590 0753                      u727 057F                      u591 0752  
                    u737 059C                      u747 0464                      u757 0549  
                    u767 04C1                      u777 0537                      u697 0661  
                    u787 04E8                      u797 0502                      _chu 00A0  
                    fsr0 0004                      indf 0000          __end_of_LCDGoto 053C  
                   l1101 0469                     l1031 04B3                     l1111 054E  
                   l1103 046D                     l1033 04B8                     l1025 049A  
                   l1041 04EC                     l1121 0510                     l1113 0554  
                   l1105 053C                     l1201 06DB                     l1035 04B9  
                   l1027 04A6                     l1043 04F3                     l1131 052D  
                   l1123 0516                     l1051 04C5                     l1115 055A  
                   l1107 0542                     l1211 06F8                     l1203 06DC  
                   l1037 04BA                     l1029 04AB                     l1045 0500  
                   l1133 0533                     l1125 051D                     l1053 04CD  
                   l1141 048B                     l1117 0560                     l1109 0545  
                   l1061 0432                     l1221 0719                     l1213 0702  
                   l1205 06E3                     l1047 0507                     l1039 04E4  
                   l1127 0522                     l1055 04DA                     l1135 0478  
                   l1119 0566                     l1063 0437                     l1231 0735  
                   l1223 071F                     l1207 06E9                     l1215 0709  
                   l1151 0641                     l1143 061F                     l1129 0528  
                   l1049 04BD                     l1137 047A                     l1057 0428  
                   l1065 043C                     l1241 0757                     l1233 073C  
                   l1225 0720                     l1217 070F                     l1209 06F1  
                   l1161 0665                     l1153 0647                     l1145 0628  
                   l1139 0487                     l1059 042D                     l1091 0598  
                   l1075 057C                     l1083 0589                     l1067 056D  
                   l1251 0771                     l1243 075D                     l1235 0746  
                   l1227 0727                     l1219 0713                     l1155 064F  
                   l1147 0635                     l1093 05A1                     l1085 058A  
                   l1077 057D                     l1069 056E                     l1261 0797  
                   l1253 0779                     l1245 0763                     l1229 072D  
                   l1237 074D                     l1181 0690                     l1173 0678  
                   l1157 0655                     l1149 063A                     l1079 0584  
                   l1271 07B3                     l1263 079B                     l1255 0780  
                   l1247 0764                     l1239 0753                     l1191 06B1  
                   l1183 0696                     l1175 068B                     l1167 0669  
                   l1159 065B                     l1097 045D                     l1273 07C2  
                   l1265 07A1                     l1257 078A                     l1249 076B  
                   l1193 06C6                     l1185 069D                     l1177 068D  
                   l1169 0671                     l1099 0462                     l1275 07CC  
                   l1267 07A5                     l1259 0791                     l1195 06CB  
                   l1187 06A3                     l1179 068E                     l1269 07AD  
                   l1197 06CF                     l1189 06AB                     l1199 06D5  
                   STR_1 005E                     STR_2 006F                     STR_3 002B  
                   STR_4 004D                     STR_5 0009                     STR_6 004D  
                   STR_7 001A                     STR_8 003C                     STR_9 002B  
                   _chu2 0190                     _flag 0036                     _main 061F  
                   btemp 007E                     start 0000   __end_of_LCD_Initialize 056D  
            LCDPutCmd@ch 0076                    ?_main 0070                    STR_10 003C  
                  STR_11 0009                    STR_12 003C                    _PORTA 0005  
                  _PORTB 0006                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _clap1 0428  
                  _clap2 042D                    _clap3 0432                    _clap4 0437  
                  pclath 000A             ?_ngoaiduong1 0070             ?_ngoaiduong2 0070  
                  status 0003                    wtemp0 007E          ?_LCD_Initialize 0070  
        __initialization 07D7             __end_of_main 07D7                   ??_main 0037  
              ??_LCDGoto 0078        __end_of_LCDPutCmd 050F             LCDPutChar@ch 0076  
      __end_of_LCDPutStr 0499                   ?_clap1 0070                   ?_clap2 0070  
                 ?_clap3 0070                   ?_clap4 0070             LCDPutStr@str 0079  
         _LCDWriteNibble 0499                   _buffer 0020                   _buzzer 045C  
 __end_of_LCDWriteNibble 04BC  __end_of__initialization 07FC                LCDGoto@ln 0077  
         __pcstackCOMMON 0070             __pidataBANK1 05E3             __pidataBANK3 05A7  
          __end_of_clap1 042D            __end_of_clap2 0432            __end_of_clap3 0437  
          __end_of_clap4 043C             ??_LCDPutChar 0074                  ??_clap1 0070  
                ??_clap2 0070                  ??_clap3 0070                  ??_clap4 0070  
             __pbssBANK0 0020          ?_LCDWriteNibble 0070       __end_of_LCDPutChar 04E3  
             __pmaintext 061F                  ?_buzzer 0070                  _LCDGoto 050F  
             __stringtab 0003         ??_LCD_Initialize 0077                  __ptext1 056D  
                __ptext2 043C                  __ptext3 0437                  __ptext4 0432  
                __ptext5 042D                  __ptext6 0428                  __ptext7 045C  
                __ptext8 053C                  __ptext9 0477                _LCDPutCmd 04E3  
                clrloop0 0442                _LCDPutStr 0477     end_of_initialization 07FC  
              _PORTBbits 0006                _TRISCbits 0087               ?_LCDPutCmd 0070  
             ?_LCDPutStr 0070               LCDGoto@pos 007C               LCDPutStr@i 0078  
         __end_of_buzzer 0477      start_initialization 07D7         ??_LCDWriteNibble 0071  
             init_fetch0 0449              __pdataBANK1 00A0              __pdataBANK3 0190  
               ??_buzzer 0070                 ?_LCDGoto 0077              __pbssCOMMON 007D  
              ___latbits 0002            __pcstackBANK0 0037               buzzer@time 0071  
            ??_LCDPutCmd 0074              ??_LCDPutStr 0077            ??_ngoaiduong1 0070  
          ??_ngoaiduong2 0070         LCDWriteNibble@ch 0073         LCDWriteNibble@rs 0070  
              __pstrings 0003                clear_ram0 0441              _LCDGoto$172 007A  
    __end_of_ngoaiduong1 0441      __end_of_ngoaiduong2 05A7              __stringbase 0008  
     __end_of__stringtab 0009                 __ptext10 04BC                 __ptext11 050F  
               __ptext12 04E3                 __ptext13 0499              _ngoaiduong1 043C  
            _ngoaiduong2 056D               _LCDPutChar 04BC                 init_ram0 044D  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
